/*     *    Copyright 2008 Anssi Piirainen * *    This file is part of FlowPlayer. * *    FlowPlayer is free software: you can redistribute it and/or modify *    it under the terms of the GNU General Public License as published by *    the Free Software Foundation, either version 3 of the License, or *    (at your option) any later version. * *    FlowPlayer is distributed in the hope that it will be useful, *    but WITHOUT ANY WARRANTY; without even the implied warranty of *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the *    GNU General Public License for more details. * *    You should have received a copy of the GNU General Public License *    along with FlowPlayer.  If not, see <http://www.gnu.org/licenses/>. */package org.flowplayer.controls {	import org.flowplayer.util.ObjectConverter;			/**	 * @author api	 */	internal class ToolTips {		private var _buttons:Boolean = false;		private var _scrubber:Boolean = true;		private var _volume:Boolean = true;				private var _play:String = "Play";		private var _pause:String = "Pause";		private var _stop:String = "Stop";		private var _mute:String = "Mute";		private var _unmute:String = "Unmute";		private var _next:String = "Next";		private var _previous:String = "Previous";		private var _fullscreen:String = "Fullscreen";		private var _fullscreenExit:String = "Exit fullscreen";				public function get props():Object {			return new ObjectConverter(this).convert();		}		[Value]		public function get buttons():Boolean {			return _buttons;		}				public function set buttons(buttons:Boolean):void {			_buttons = buttons;		}				[Value]		public function get scrubber():Boolean {			return _scrubber;		}				public function set scrubber(scrubber:Boolean):void {			_scrubber = scrubber;		}				[Value]		public function get volume():Boolean {			return _volume;		}				public function set volume(volume:Boolean):void {			_volume = volume;		}				[Value]		public function get play():String {			return label(_play);		}
		
		private function label(value:String):String {			return _buttons ? value : null;
		}
		public function set play(play:String):void {			_play = play;		}				[Value]		public function get stop():String {			return label(_stop);		}				public function set stop(stop:String):void {			_stop = stop;		}				[Value]		public function get mute():String {			return label(_mute);		}				public function set mute(mute:String):void {			_mute = mute;		}				[Value]		public function get unmute():String {			return label(_unmute);		}				public function set unmute(unmute:String):void {			_unmute = unmute;		}				[Value]		public function get next():String {			return label(_next);		}				public function set next(next:String):void {			_next = next;		}				[Value]		public function get previous():String {			return label(_previous);		}				public function set previous(previous:String):void {			_previous = previous;		}				[Value]		public function get fullscreen():String {			return label(_fullscreen);		}				public function set fullscreen(fullscreen:String):void {			_fullscreen = fullscreen;		}				[Value]		public function get fullscreenExit():String {			return label(_fullscreenExit);		}				public function set fullscreenExit(fullscreenExit:String):void {			_fullscreenExit = fullscreenExit;		}				[Value]		public function get pause():String {			return label(_pause);		}				public function set pause(pause:String):void {			_pause = pause;		}	}}